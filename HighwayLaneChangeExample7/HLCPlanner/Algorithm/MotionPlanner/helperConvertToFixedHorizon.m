function [RefDir,RefPoses,RefCurva,RefVelo,RefAcc,...
           RefAngVel,RefCurvDer]  = helperConvertToFixedHorizon(IsNew, numTrajPoints, trajCart, times)
% This function parses the Trajectory generated by planner:
% Trajectory generated by the planner is extracted to get Position, 
% Curvature, Velocity, Curvature Derivative.
%
%   This is a helper function for example purposes and
%   may be removed or modified in the future.
%
%   Copyright 2020 The MathWorks, Inc.
persistent RefPosesState RefVeloState RefCurvaState RefCurvaDerState RefAccState RefAngularVel

% Initialize the persistent variables 
if isempty(RefPosesState)
    RefPosesState = zeros(500,3);
    RefCurvaState = zeros(500,1);
    RefVeloState  = zeros(500,1);
    RefAccState      = zeros(500,1);
    RefAngularVel    = zeros(500,1);
    RefCurvaDerState = zeros(500,1);
end

% Chek for the new trajectory
% Parse the cartesian states of trajectory (trajOutCart)
if IsNew
    TimeVecInTraj = times(1:numTrajPoints,1);    
    TimeVecResample = linspace(TimeVecInTraj(1),TimeVecInTraj(end),500)';
    Omega = gradient(trajCart(1:numTrajPoints,3),TimeVecInTraj);
    RefPosesState(:,1) = interp1(TimeVecInTraj,trajCart(1:numTrajPoints,1),TimeVecResample);
    RefPosesState(:,2) = interp1(TimeVecInTraj,trajCart(1:numTrajPoints,2),TimeVecResample);
    RefPosesState(:,3) = interp1(TimeVecInTraj,trajCart(1:numTrajPoints,3),TimeVecResample);
    RefCurvaState      = interp1(TimeVecInTraj,trajCart(1:numTrajPoints,4),TimeVecResample);
    RefVeloState       = interp1(TimeVecInTraj,trajCart(1:numTrajPoints,5),TimeVecResample);
    RefAccState        = interp1(TimeVecInTraj,trajCart(1:numTrajPoints,6),TimeVecResample);
    RefAngularVel      = interp1(TimeVecInTraj,Omega(1:numTrajPoints,1),TimeVecResample);
    RefCurvaDerState   = gradient(RefCurvaState)./gradient(TimeVecResample)./RefVeloState;
end

% Assign the values to output variables
RefDir   = ones(500,1);
RefPoses = RefPosesState;
RefCurva = RefCurvaState;
RefVelo  = RefVeloState;
RefAcc     = RefAccState;
RefAngVel  = RefAngularVel;
RefCurvDer = RefCurvaDerState;
end
